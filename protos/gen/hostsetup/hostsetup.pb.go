// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.19.6
// source: hostsetup/hostsetup.proto

package hostsetup

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HostnameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HostnameRequest) Reset() {
	*x = HostnameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostsetup_hostsetup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostnameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostnameRequest) ProtoMessage() {}

func (x *HostnameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostsetup_hostsetup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostnameRequest.ProtoReflect.Descriptor instead.
func (*HostnameRequest) Descriptor() ([]byte, []int) {
	return file_hostsetup_hostsetup_proto_rawDescGZIP(), []int{0}
}

func (x *HostnameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SuccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SuccessResponse) Reset() {
	*x = SuccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostsetup_hostsetup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessResponse) ProtoMessage() {}

func (x *SuccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hostsetup_hostsetup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessResponse.ProtoReflect.Descriptor instead.
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return file_hostsetup_hostsetup_proto_rawDescGZIP(), []int{1}
}

func (x *SuccessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListDNSServersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListDNSServersResponse) Reset() {
	*x = ListDNSServersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostsetup_hostsetup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDNSServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDNSServersResponse) ProtoMessage() {}

func (x *ListDNSServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hostsetup_hostsetup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDNSServersResponse.ProtoReflect.Descriptor instead.
func (*ListDNSServersResponse) Descriptor() ([]byte, []int) {
	return file_hostsetup_hostsetup_proto_rawDescGZIP(), []int{2}
}

func (x *ListDNSServersResponse) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type DNSServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DnsServer string `protobuf:"bytes,1,opt,name=dnsServer,proto3" json:"dnsServer,omitempty"`
}

func (x *DNSServerRequest) Reset() {
	*x = DNSServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hostsetup_hostsetup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DNSServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DNSServerRequest) ProtoMessage() {}

func (x *DNSServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hostsetup_hostsetup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DNSServerRequest.ProtoReflect.Descriptor instead.
func (*DNSServerRequest) Descriptor() ([]byte, []int) {
	return file_hostsetup_hostsetup_proto_rawDescGZIP(), []int{3}
}

func (x *DNSServerRequest) GetDnsServer() string {
	if x != nil {
		return x.DnsServer
	}
	return ""
}

var File_hostsetup_hostsetup_proto protoreflect.FileDescriptor

var file_hostsetup_hostsetup_proto_rawDesc = []byte{
	0x0a, 0x19, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2f, 0x68, 0x6f, 0x73, 0x74,
	0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x68, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x4e, 0x53,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x10, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x6e, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x32, 0x9f, 0x03, 0x0a, 0x09, 0x48, 0x6f, 0x73, 0x74, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x12, 0x5b, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x3a, 0x01, 0x2a, 0x22, 0x09, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x60, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x4e, 0x53, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x0b, 0x2f, 0x64, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x73, 0x12, 0x66, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x1b, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x44,
	0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x64, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x73, 0x2f, 0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x6b, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x2e,
	0x68, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x6f, 0x73,
	0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01,
	0x2a, 0x22, 0x14, 0x2f, 0x64, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x16, 0x5a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x65, 0x74, 0x75, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hostsetup_hostsetup_proto_rawDescOnce sync.Once
	file_hostsetup_hostsetup_proto_rawDescData = file_hostsetup_hostsetup_proto_rawDesc
)

func file_hostsetup_hostsetup_proto_rawDescGZIP() []byte {
	file_hostsetup_hostsetup_proto_rawDescOnce.Do(func() {
		file_hostsetup_hostsetup_proto_rawDescData = protoimpl.X.CompressGZIP(file_hostsetup_hostsetup_proto_rawDescData)
	})
	return file_hostsetup_hostsetup_proto_rawDescData
}

var file_hostsetup_hostsetup_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_hostsetup_hostsetup_proto_goTypes = []any{
	(*HostnameRequest)(nil),        // 0: hostsetup.HostnameRequest
	(*SuccessResponse)(nil),        // 1: hostsetup.SuccessResponse
	(*ListDNSServersResponse)(nil), // 2: hostsetup.ListDNSServersResponse
	(*DNSServerRequest)(nil),       // 3: hostsetup.DNSServerRequest
	(*emptypb.Empty)(nil),          // 4: google.protobuf.Empty
}
var file_hostsetup_hostsetup_proto_depIdxs = []int32{
	0, // 0: hostsetup.HostSetup.SetHostname:input_type -> hostsetup.HostnameRequest
	4, // 1: hostsetup.HostSetup.ListDNSServers:input_type -> google.protobuf.Empty
	3, // 2: hostsetup.HostSetup.AddDNSServer:input_type -> hostsetup.DNSServerRequest
	3, // 3: hostsetup.HostSetup.DeleteDNSServer:input_type -> hostsetup.DNSServerRequest
	1, // 4: hostsetup.HostSetup.SetHostname:output_type -> hostsetup.SuccessResponse
	2, // 5: hostsetup.HostSetup.ListDNSServers:output_type -> hostsetup.ListDNSServersResponse
	1, // 6: hostsetup.HostSetup.AddDNSServer:output_type -> hostsetup.SuccessResponse
	1, // 7: hostsetup.HostSetup.DeleteDNSServer:output_type -> hostsetup.SuccessResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hostsetup_hostsetup_proto_init() }
func file_hostsetup_hostsetup_proto_init() {
	if File_hostsetup_hostsetup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hostsetup_hostsetup_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HostnameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostsetup_hostsetup_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*SuccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostsetup_hostsetup_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListDNSServersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hostsetup_hostsetup_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DNSServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hostsetup_hostsetup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hostsetup_hostsetup_proto_goTypes,
		DependencyIndexes: file_hostsetup_hostsetup_proto_depIdxs,
		MessageInfos:      file_hostsetup_hostsetup_proto_msgTypes,
	}.Build()
	File_hostsetup_hostsetup_proto = out.File
	file_hostsetup_hostsetup_proto_rawDesc = nil
	file_hostsetup_hostsetup_proto_goTypes = nil
	file_hostsetup_hostsetup_proto_depIdxs = nil
}
